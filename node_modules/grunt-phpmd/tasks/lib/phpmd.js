// Generated by CoffeeScript 1.6.2
/*
grunt-phpmd

Copyright (c) 2013 Andreas Lappe
http://kaeufli.ch
Licensed under the BSD license.
*/

var exec, path;

path = require('path');

exec = (require('child_process')).exec;

exports.init = function(grunt) {
  var buildCommand, cmd, config, defaults, done, exports;

  exports = config = {};
  cmd = done = null;
  defaults = {
    bin: 'phpmd',
    reportFormat: 'xml',
    reportFile: false,
    suffixes: false,
    exclude: false,
    minimumPriority: false,
    strict: false,
    rulesets: 'codesize,unusedcode,naming',
    maxBuffer: 200 * 1024
  };
  buildCommand = function(dir) {
    cmd = "" + (path.normalize(config.bin)) + " " + dir + " " + config.reportFormat + " " + config.rulesets;
    if (config.minimumPriority) {
      cmd += " --minimumpriority " + config.minimumPriority;
    }
    if (config.reportFile) {
      cmd += " --reportfile " + config.reportFile;
    }
    if (config.suffixes) {
      cmd += " --suffixes " + config.suffixes;
    }
    if (config.exclude) {
      cmd += " --exclude " + config.exclude;
    }
    if (config.strict) {
      cmd += " --strict";
    }
    return cmd;
  };
  exports.setup = function(runner) {
    var dir;

    dir = path.normalize(runner.data.dir);
    config = runner.options(defaults);
    cmd = buildCommand(dir);
    grunt.log.writeln("Starting phpmd (target: " + runner.target.cyan + ") in " + dir.cyan);
    grunt.verbose.writeln("Execute: " + cmd);
    return done = runner.async();
  };
  exports.run = function() {
    var cmdOptions;

    cmdOptions = {
      maxBuffer: config.maxBuffer
    };
    return exec(cmd, cmdOptions, function(err, stdout, stderr) {
      if (stdout) {
        grunt.log.write(stdout);
      }
      if (err) {
        if (err.code !== 2) {
          grunt.fatal(err);
        }
      }
      return done();
    });
  };
  return exports;
};
